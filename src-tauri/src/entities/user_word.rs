//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.14

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "user_word")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub master_word_id: i32,
    #[sea_orm(column_type = "Float")]
    pub stability: f32,
    #[sea_orm(column_type = "Float")]
    pub difficulty: f32,
    pub due: DateTimeWithTimeZone,
    pub last_review: Option<DateTimeWithTimeZone>,
    pub status: i16,
    pub added_at: DateTimeWithTimeZone,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::master_word::Entity",
        from = "Column::MasterWordId",
        to = "super::master_word::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    MasterWord,
}

impl Related<super::master_word::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::MasterWord.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
